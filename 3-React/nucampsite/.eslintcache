[{"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/index.js":"1","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/App.js":"2","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/reportWebVitals.js":"3","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/campsites.js":"5","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/MainComponent.js":"7","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/HeaderComponent.js":"8","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/FooterComponent.js":"9","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/HomeComponent.js":"10","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/ContactComponent.js":"11","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/comments.js":"12","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/partners.js":"13","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/promotions.js":"14","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/AboutComponent.js":"15","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/configureStore.js":"16","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/campsites.js":"17","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/partners.js":"18","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/promotions.js":"19","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/comments.js":"20"},{"size":756,"mtime":1612592602390,"results":"21","hashOfConfig":"22"},{"size":584,"mtime":1613344699437,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611614523595,"results":"24","hashOfConfig":"22"},{"size":1462,"mtime":1612601972648,"results":"25","hashOfConfig":"22"},{"size":1242,"mtime":1612599544758,"results":"26","hashOfConfig":"22"},{"size":6129,"mtime":1613442421891,"results":"27","hashOfConfig":"22"},{"size":2362,"mtime":1613345337125,"results":"28","hashOfConfig":"22"},{"size":4659,"mtime":1613329457228,"results":"29","hashOfConfig":"22"},{"size":1566,"mtime":1612632072306,"results":"30","hashOfConfig":"22"},{"size":798,"mtime":1613327253908,"results":"31","hashOfConfig":"22"},{"size":8739,"mtime":1613427626439,"results":"32","hashOfConfig":"22"},{"size":4243,"mtime":1612599464377,"results":"33","hashOfConfig":"22"},{"size":1054,"mtime":1612599476493,"results":"34","hashOfConfig":"22"},{"size":303,"mtime":1612599482465,"results":"35","hashOfConfig":"22"},{"size":3522,"mtime":1612628146619,"results":"36","hashOfConfig":"22"},{"size":448,"mtime":1613784798804,"results":"37","hashOfConfig":"22"},{"size":173,"mtime":1613783512725,"results":"38","hashOfConfig":"22"},{"size":169,"mtime":1613783878119,"results":"39","hashOfConfig":"22"},{"size":177,"mtime":1613783986261,"results":"40","hashOfConfig":"22"},{"size":169,"mtime":1613783789713,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"w68l9h",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/index.js",[],["85","86"],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/App.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/reportWebVitals.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/campsites.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["87","88","89","90","91","92","93","94","95"],"import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Breadcrumb,\n  BreadcrumbItem,\n  Label,\n  Col,\n  Row,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\n/****   Validation Logic  ****/\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(+val);\nconst validEmail = (val) =>\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isModalOpen: false,\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    // add bindings\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  // handleSubmit(values) {\n  //   console.log(\"Current state is: \" + JSON.stringify(values));\n  //   alert(\"Current state is: \" + JSON.stringify(values));\n  // }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader>\n            <h4>Submit Comment</h4>\n          </ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <div className=\"form-group\">\n                <Label htmlFor=\"rating\" md={2}>\n                  Rating\n                </Label>\n                <Col md={10}>\n                  <Control.select\n                    model=\".rating\"\n                    id=\"rating\"\n                    name=\"rating\"\n                    placeholder=\"1\"\n                    options=\"1,2,3,4,5\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"author\" md={4}>\n                  Your Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".author\"\n                    id=\"author\"\n                    name=\"author\"\n                    placeholder=\"Your Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(4),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".author\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 4 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"text\" md={2}>\n                  Comment\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model=\".text\"\n                    id=\"text\"\n                    name=\"text\"\n                    rows=\"6\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </div>\n              <Row className=\"form-group\">\n                <Col md={{ size: 10 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n        <Row>\n          <Col md={{ size: 10, offset: 2 }}>\n            <Button\n              outline\n              type=\"submit\"\n              color=\"primary\"\n              onClick={this.toggleModal}\n            >\n              <i className=\"fa fa-pencil fa-lg\" />\n              Submit Comment\n            </Button>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction RenderCampsite({ campsite }) {\n  return (\n    <div className=\"col-md-5 m-1\">\n      <Card>\n        <CardImg top src={campsite.image} alt={campsite.name} />\n        <CardBody>\n          <CardText>{campsite.description}</CardText>\n        </CardBody>\n      </Card>\n      <CommentForm />\n    </div>\n  );\n}\n\nfunction RenderComments({ comments }) {\n  if (comments) {\n    return (\n      <div className=\"col-md-5 m-1\">\n        <h4>Comments</h4>\n        {comments.map((comment) => {\n          return (\n            <div key={comment.id} className=\"col-md-5 m-1\">\n              <p>\n                {comment.text}\n                <br />\n                --{comment.author},\n                {new Intl.DateTimeFormat(\"en-US\", {\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"2-digit\",\n                }).format(new Date(Date.parse(comment.date)))}\n              </p>\n            </div>\n          );\n        })}\n        <CommentForm />\n      </div>\n    );\n  }\n  return <div />;\n}\n\n// Main render() for CampsiteInfo\nfunction CampsiteInfo(props) {\n  if (props.campsite) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/directory\">Directory</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>{props.campsite.name}</h2>\n            <hr />\n            <h2>{props.comments.text}</h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderCampsite campsite={props.campsite} />\n          <RenderComments comment={props.comments} />\n        </div>\n      </div>\n    );\n  }\n\n  // return used as default, when if(campsite) is false and we fail to run if()\n  return <div />;\n}\n\nexport default CampsiteInfo;\n","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/MainComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/HeaderComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/FooterComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/HomeComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/ContactComponent.js",["96","97","98","99","100","101","102"],"import React, { Component } from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Label,\n  Col,\n  Row,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\n/****   Validation Logic  ****/\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(+val);\nconst validEmail = (val) =>\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      agree: false,\n      contactType: \"By Phone\",\n      feedback: \"\",\n      touched: {\n        firstName: false,\n        lastName: false,\n        phoneNum: false,\n        email: false,\n      },\n    };\n\n    // add bindings\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    alert(\"Current state is: \" + JSON.stringify(values));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {/* Breadcrumbs */}\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/home\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>Contact Us</h2>\n          </div>\n        </div>\n\n        {/****  Body  *****/}\n        <div className=\"row row-content align-items-center\">\n          <div className=\"col-sm-4\">\n            <h5>Our Address</h5>\n            <address>\n              1 Nucamp Way\n              <br />\n              Seattle, WA 98001\n              <br />\n              U.S.A.\n            </address>\n          </div>\n          <div className=\"col\">\n            <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\">\n              <i className=\"fa fa-phone\" /> 1-206-555-1234\n            </a>\n            <br />\n            <a\n              role=\"button\"\n              className=\"btn btn-link\"\n              href=\"mailto:fakeemail@fakeemail.co\"\n            >\n              <i className=\"fa fa-envelope-o\" /> campsites@nucamp.co\n            </a>\n          </div>\n        </div>\n\n        {/**** Contact Form   input group ****/}\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h2>Send us your Feedback</h2>\n            <hr />\n          </div>\n          <div className=\"col-md-10\">\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstName\" md={2}>\n                  First Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".firstName\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    placeholder=\"First Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".firstName\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastName\" md={2}>\n                  Last Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".lastName\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    placeholder=\"Last Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".lastName\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phoneNum\" md={2}>\n                  Phone\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".phoneNum\"\n                    id=\"phoneNum\"\n                    name=\"phoneNum\"\n                    placeholder=\"Phone number\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".phoneNum\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      maxLength: \"Must be 15 numbers or less\",\n                      isNumber: \"Must be a number\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>\n                  Email\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      validEmail,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      validEmail: \"Invalid email address\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 4, offset: 2 }}>\n                  <div className=\"form-check\">\n                    <Label check>\n                      <Control.checkbox\n                        model=\".agree\"\n                        name=\"agree\"\n                        className=\"form-check-input\"\n                      />{\" \"}\n                      <strong>May we contact you?</strong>\n                    </Label>\n                  </div>\n                </Col>\n                <Col md={4}>\n                  <Control.select\n                    model=\".contactType\"\n                    name=\"contactType\"\n                    className=\"form-control\"\n                  >\n                    <option>By Phone</option>\n                    <option>By Email</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"feedback\" md={2}>\n                  Your Feedback\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model=\".feedback\"\n                    id=\"feedback\"\n                    name=\"feedback\"\n                    rows=\"12\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Send Feedback\n                  </Button>\n                </Col>\n              </Row>\n            </LocalForm>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/comments.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/partners.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/promotions.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/AboutComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/configureStore.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/campsites.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/partners.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/promotions.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/comments.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":7,"column":3,"nodeType":"109","messageId":"110","endLine":7,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":17,"column":3,"nodeType":"109","messageId":"110","endLine":17,"endColumn":7},{"ruleId":"107","severity":1,"message":"112","line":18,"column":3,"nodeType":"109","messageId":"110","endLine":18,"endColumn":12},{"ruleId":"107","severity":1,"message":"113","line":19,"column":3,"nodeType":"109","messageId":"110","endLine":19,"endColumn":8},{"ruleId":"107","severity":1,"message":"114","line":28,"column":7,"nodeType":"109","messageId":"110","endLine":28,"endColumn":15},{"ruleId":"107","severity":1,"message":"115","line":29,"column":7,"nodeType":"109","messageId":"110","endLine":29,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":69,"column":19,"nodeType":"118","endLine":76,"endColumn":21},{"ruleId":"116","severity":1,"message":"119","line":84,"column":19,"nodeType":"118","endLine":95,"endColumn":21},{"ruleId":"116","severity":1,"message":"120","line":114,"column":19,"nodeType":"118","endLine":120,"endColumn":21},{"ruleId":"116","severity":1,"message":"119","line":106,"column":19,"nodeType":"118","endLine":117,"endColumn":21},{"ruleId":"116","severity":1,"message":"119","line":136,"column":19,"nodeType":"118","endLine":147,"endColumn":21},{"ruleId":"116","severity":1,"message":"119","line":166,"column":19,"nodeType":"118","endLine":178,"endColumn":21},{"ruleId":"116","severity":1,"message":"119","line":198,"column":19,"nodeType":"118","endLine":208,"endColumn":21},{"ruleId":"116","severity":1,"message":"121","line":225,"column":23,"nodeType":"118","endLine":229,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":235,"column":19,"nodeType":"118","endLine":239,"endColumn":20},{"ruleId":"116","severity":1,"message":"120","line":250,"column":19,"nodeType":"118","endLine":256,"endColumn":21},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'CardTitle' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'isNumber' is assigned a value but never used.","'validEmail' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]