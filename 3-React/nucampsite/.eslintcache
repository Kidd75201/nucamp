[{"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/index.js":"1","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/App.js":"2","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/reportWebVitals.js":"3","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/campsites.js":"5","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/MainComponent.js":"7","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/HeaderComponent.js":"8","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/FooterComponent.js":"9","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/HomeComponent.js":"10","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/ContactComponent.js":"11","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/comments.js":"12","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/partners.js":"13","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/promotions.js":"14","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/AboutComponent.js":"15","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/configureStore.js":"16","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/campsites.js":"17","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/partners.js":"18","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/promotions.js":"19","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/comments.js":"20","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/ActionCreators.js":"21","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/ActionTypes.js":"22","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/LoadingComponent.js":"23","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/forms.js":"24","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":756,"mtime":1612592602390,"results":"26","hashOfConfig":"27"},{"size":584,"mtime":1613344699437,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611614523595,"results":"29","hashOfConfig":"27"},{"size":2031,"mtime":1613830818562,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1612599544758,"results":"31","hashOfConfig":"27"},{"size":6906,"mtime":1613838140653,"results":"32","hashOfConfig":"27"},{"size":4326,"mtime":1613844626840,"results":"33","hashOfConfig":"27"},{"size":4659,"mtime":1613329457228,"results":"34","hashOfConfig":"27"},{"size":1566,"mtime":1612632072306,"results":"35","hashOfConfig":"27"},{"size":1572,"mtime":1613844873003,"results":"36","hashOfConfig":"27"},{"size":8822,"mtime":1613800306951,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1612599464377,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1612599476493,"results":"39","hashOfConfig":"40"},{"size":303,"mtime":1612599482465,"results":"41","hashOfConfig":"27"},{"size":3961,"mtime":1613847589696,"results":"42","hashOfConfig":"27"},{"size":732,"mtime":1613799791604,"results":"43","hashOfConfig":"27"},{"size":665,"mtime":1613797502050,"results":"44","hashOfConfig":"27"},{"size":594,"mtime":1613846089732,"results":"45","hashOfConfig":"27"},{"size":610,"mtime":1613843676266,"results":"46","hashOfConfig":"27"},{"size":527,"mtime":1613835020295,"results":"47","hashOfConfig":"27"},{"size":5607,"mtime":1613848904573,"results":"48","hashOfConfig":"27"},{"size":595,"mtime":1613842986146,"results":"49","hashOfConfig":"27"},{"size":211,"mtime":1613797778442,"results":"50","hashOfConfig":"27"},{"size":154,"mtime":1613799612457,"results":"51","hashOfConfig":"27"},{"size":49,"mtime":1613828528446,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"w68l9h",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"55"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x6v1n2",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/index.js",[],["109","110"],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/App.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/reportWebVitals.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/campsites.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["111","112","113","114","115"],"import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  Breadcrumb,\n  BreadcrumbItem,\n  Label,\n  Col,\n  Row,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\n\n/****   Validation Logic  ****/\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(+val);\nconst validEmail = (val) =>\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nfunction RenderCampsite({ campsite }) {\n  return (\n    <div className=\"col-md-5 m-1\">\n      <FadeTransform\n        in\n        transformProps={{\n          exitTransform: \"scale(0.5) translateY(-50%)\",\n        }}\n      >\n        <Card>\n          <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n          <CardBody>\n            <CardText>{campsite.description}</CardText>\n          </CardBody>\n        </Card>\n        <CommentForm />\n      </FadeTransform>\n    </div>\n  );\n}\n\nfunction RenderComments({ comments, postComment, campsiteId }) {\n  if (comments) {\n    return (\n      <div className=\"col-md-5 m-1\">\n        <h4>Comments</h4>\n        <Stagger in>\n          {comments.map((comment) => {\n            return (\n              <Fade in key={comment.id}>\n                <div>\n                  <p>\n                    {comment.text}\n                    <br />\n                    --{comment.author},\n                    {new Intl.DateTimeFormat(\"en-US\", {\n                      year: \"numeric\",\n                      month: \"short\",\n                      day: \"2-digit\",\n                    }).format(new Date(Date.parse(comment.date)))}\n                  </p>\n                </div>\n              </Fade>\n            );\n          })}\n        </Stagger>\n        <CommentForm campsiteId={campsiteId} postComment={postComment} />\n      </div>\n    );\n  }\n  return <div />;\n}\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isModalOpen: false,\n    };\n    // add bindings\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(\n      this.props.campsiteId,\n      values.rating,\n      values.author,\n      values.text\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Row>\n          <Col md={{ size: 10, offset: 2 }}>\n            <Button\n              outline\n              type=\"submit\"\n              color=\"primary\"\n              onClick={this.toggleModal}\n            >\n              <i className=\"fa fa-pencil fa-lg\" />\n              Submit Comment\n            </Button>\n          </Col>\n        </Row>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <div className=\"form-group\">\n                <Label htmlFor=\"rating\" md={2}>\n                  Rating\n                </Label>\n                <Control.select\n                  model=\".rating\"\n                  id=\"rating\"\n                  name=\"rating\"\n                  className=\"form-control\"\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                </Control.select>\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"author\" md={4}>\n                  Your Name\n                </Label>\n                <Control.text\n                  model=\".author\"\n                  id=\"author\"\n                  name=\"author\"\n                  placeholder=\"Your Name\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    minLength: minLength(2),\n                    maxLength: maxLength(15),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".author\"\n                  show=\"touched\"\n                  component=\"div\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \"Must be at least 2 characters\",\n                    maxLength: \"Must be 15 characters or less\",\n                  }}\n                />\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"text\" md={2}>\n                  Comment\n                </Label>\n                <Control.textarea\n                  model=\".text\"\n                  id=\"text\"\n                  name=\"text\"\n                  rows=\"6\"\n                  className=\"form-control\"\n                />\n              </div>\n              <Button type=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\n// Main render() for CampsiteInfo\nfunction CampsiteInfo(props) {\n  if (props.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  }\n\n  if (props.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4>{props.errMess}</h4>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (props.campsite) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/directory\">Directory</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>{props.campsite.name}</h2>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderCampsite campsite={props.campsite} />\n          <RenderComments\n            comment={props.comments}\n            postComment={props.postComment}\n            campsiteId={props.campsite.id}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  // return used as default, when if(campsite) is false and we fail to run if()\n  return <div />;\n}\n\nexport default CampsiteInfo;\n","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/MainComponent.js",["116"],"import React, { Component } from \"react\";\nimport Directory from \"./DirectoryComponent\";\nimport CampsiteInfo from \"./CampsiteInfoComponent\";\nimport Header from \"./HeaderComponent\";\nimport Footer from \"./FooterComponent\";\nimport Home from \"./HomeComponent\";\nimport Contact from \"./ContactComponent\";\nimport About from \"./AboutComponent\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  postComment,\n  fetchCampsites,\n  fetchComments,\n  fetchPromotions,\n  fetchPartners,\n} from \"../redux/ActionCreators\";\nimport { actions } from \"react-redux-form\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst mapStateToProps = (state) => {\n  return {\n    campsites: state.campsites,\n    comments: state.comments,\n    partners: state.partners,\n    promotions: state.promotions,\n    partners: state.partners,\n  };\n};\n\nconst mapDispatchToProps = {\n  postComment: (campsiteId, rating, author, text) =>\n    postComment(campsiteId, rating, author, text),\n  fetchCampsites: () => fetchCampsites(),\n  resetFeedbackForm: () => actions.reset(\"feedbackForm\"),\n  fetchComments: () => fetchComments(),\n  fetchPromotions: () => fetchPromotions(),\n  fetchPartners: () => fetchPartners(),\n};\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.fetchCampsites();\n    this.props.fetchComments();\n    this.props.fetchPromotions();\n    this.props.fetchPartners();\n  }\n\n  render() {\n    const HomePage = () => {\n      return (\n        <Home\n          campsite={\n            this.props.campsites.campsites.filter(\n              (campsite) => campsite.featured\n            )[0]\n          }\n          campsitesLoading={this.props.campsites.isLoading}\n          campsitesErrMess={this.props.campsites.errMess}\n          promotion={\n            this.props.promotions.promotions.filter(\n              (promotion) => promotion.featured\n            )[0]\n          }\n          promotionLoading={this.props.promotions.isLoading}\n          promotionErrMess={this.props.promotions.errMess}\n          partner={\n            this.props.partners.partners.filter(\n              (partner) => partner.featured\n            )[0]\n          }\n          partnerLoading={this.props.partners.isLoading}\n          partnerErrMess={this.props.partners.errMess}\n        />\n      );\n    };\n\n    const CampsiteWithId = ({ match }) => {\n      //  pass in Props with objects ({ match })\n      return (\n        <CampsiteInfo\n          campsite={\n            // capture single id using filter()[0] 'index location'\n            this.props.campsites.campsites.filter(\n              (campsite) => campsite.id === +match.params.campsiteId\n            )[0]\n          }\n          isLoading={this.props.campsites.isLoading}\n          errMess={this.props.campsites.errMess}\n          // capture entire array using filter() 'no index location'\n          comments={this.props.comments.comments.filter(\n            (comment) => comment.campsiteId === +match.params.campsiteId\n          )}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n    };\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition\n            key={this.props.location.key}\n            classNames=\"page\"\n            timeout={300}\n          >\n            <Switch>\n              <Route path=\"/home\" component={HomePage} />\n              <Route\n                exact\n                path=\"/directory\"\n                render={() => <Directory campsites={this.props.campsites} />}\n              />\n              <Route path=\"/directory/:campsiteId\" component={CampsiteWithId} />\n              <Route\n                exact\n                path=\"/contactus\"\n                render={() => (\n                  <Contact resetFeedbackForm={this.props.resetFeedbackForm} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/aboutus\"\n                render={() => <About partners={this.props.partners} />}\n              />\n              <Redirect to=\"/home\" />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/HeaderComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/FooterComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/HomeComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/ContactComponent.js",["117","118","119","120","121","122","123"],"import React, { Component } from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Label,\n  Col,\n  Row,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, Form, Errors } from \"react-redux-form\";\n\n/****   Validation Logic  ****/\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(+val);\nconst validEmail = (val) =>\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      agree: false,\n      contactType: \"By Phone\",\n      feedback: \"\",\n      touched: {\n        firstName: false,\n        lastName: false,\n        phoneNum: false,\n        email: false,\n      },\n    };\n\n    // add bindings\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    alert(\"Current state is: \" + JSON.stringify(values));\n    this.props.resetFeedbackForm();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {/* Breadcrumbs */}\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/home\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>Contact Us</h2>\n          </div>\n        </div>\n\n        {/****  Body  *****/}\n        <div className=\"row row-content align-items-center\">\n          <div className=\"col-sm-4\">\n            <h5>Our Address</h5>\n            <address>\n              1 Nucamp Way\n              <br />\n              Seattle, WA 98001\n              <br />\n              U.S.A.\n            </address>\n          </div>\n          <div className=\"col\">\n            <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\">\n              <i className=\"fa fa-phone\" /> 1-206-555-1234\n            </a>\n            <br />\n            <a\n              role=\"button\"\n              className=\"btn btn-link\"\n              href=\"mailto:fakeemail@fakeemail.co\"\n            >\n              <i className=\"fa fa-envelope-o\" /> campsites@nucamp.co\n            </a>\n          </div>\n        </div>\n\n        {/**** Contact Form   input group ****/}\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h2>Send us your Feedback</h2>\n            <hr />\n          </div>\n          <div className=\"col-md-10\">\n            <Form\n              model=\"feedbackForm\"\n              onSubmit={(values) => this.handleSubmit(values)}\n            >\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstName\" md={2}>\n                  First Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".firstName\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    placeholder=\"First Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".firstName\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastName\" md={2}>\n                  Last Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".lastName\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    placeholder=\"Last Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".lastName\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 2 characters\",\n                      maxLength: \"Must be 15 characters or less\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phoneNum\" md={2}>\n                  Phone\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".phoneNum\"\n                    id=\"phoneNum\"\n                    name=\"phoneNum\"\n                    placeholder=\"Phone number\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".phoneNum\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be at least 10 characters\",\n                      maxLength: \"Must be 15 numbers or less\",\n                      isNumber: \"Must be a number\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>\n                  Email\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      validEmail,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: \"Required\",\n                      validEmail: \"Invalid email address\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 4, offset: 2 }}>\n                  <div className=\"form-check\">\n                    <Label check>\n                      <Control.checkbox\n                        model=\".agree\"\n                        name=\"agree\"\n                        className=\"form-check-input\"\n                      />{\" \"}\n                      <strong>May we contact you?</strong>\n                    </Label>\n                  </div>\n                </Col>\n                <Col md={4}>\n                  <Control.select\n                    model=\".contactType\"\n                    name=\"contactType\"\n                    className=\"form-control\"\n                  >\n                    <option>By Phone</option>\n                    <option>By Email</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"feedback\" md={2}>\n                  Your Feedback\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model=\".feedback\"\n                    id=\"feedback\"\n                    name=\"feedback\"\n                    rows=\"12\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Send Feedback\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/comments.js",[],["124","125"],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/partners.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/promotions.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/AboutComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/configureStore.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/campsites.js",["126"],"import { CAMPSITES } from \"../shared/campsites\";\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Campsites = (\n  state = {\n    isLoading: true,\n    errMess: null,\n    campsites: [],\n  },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.ADD_CAMPSITES:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        campsites: action.payload,\n      };\n    case ActionTypes.CAMPSITES_LOADING:\n      return { ...state, isLoading: true, errMess: null, campsites: [] };\n    case ActionTypes.CAMPSITES_FAILED:\n      return { ...state, isLoading: false, errMess: action.payload };\n    default:\n      return state;\n  }\n};\n","/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/partners.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/promotions.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/comments.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/ActionCreators.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/ActionTypes.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/components/LoadingComponent.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/redux/forms.js",[],"/home/kidd/Web_Development/Nucamp/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":27,"column":7,"nodeType":"133","messageId":"134","endLine":27,"endColumn":15},{"ruleId":"131","severity":1,"message":"135","line":28,"column":7,"nodeType":"133","messageId":"134","endLine":28,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":136,"column":17,"nodeType":"138","endLine":141,"endColumn":18},{"ruleId":"136","severity":1,"message":"139","line":153,"column":17,"nodeType":"138","endLine":164,"endColumn":19},{"ruleId":"136","severity":1,"message":"140","line":181,"column":17,"nodeType":"138","endLine":187,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":27,"column":5,"nodeType":"143","messageId":"144","endLine":27,"endColumn":13},{"ruleId":"136","severity":1,"message":"139","line":110,"column":19,"nodeType":"138","endLine":121,"endColumn":21},{"ruleId":"136","severity":1,"message":"139","line":140,"column":19,"nodeType":"138","endLine":151,"endColumn":21},{"ruleId":"136","severity":1,"message":"139","line":170,"column":19,"nodeType":"138","endLine":182,"endColumn":21},{"ruleId":"136","severity":1,"message":"139","line":202,"column":19,"nodeType":"138","endLine":212,"endColumn":21},{"ruleId":"136","severity":1,"message":"145","line":229,"column":23,"nodeType":"138","endLine":233,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":239,"column":19,"nodeType":"138","endLine":243,"endColumn":20},{"ruleId":"136","severity":1,"message":"140","line":254,"column":19,"nodeType":"138","endLine":260,"endColumn":21},{"ruleId":"127","replacedBy":"146"},{"ruleId":"129","replacedBy":"147"},{"ruleId":"131","severity":1,"message":"148","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":19},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'isNumber' is assigned a value but never used.","Identifier","unusedVar","'validEmail' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-dupe-keys","Duplicate key 'partners'.","ObjectExpression","unexpected","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["149"],["150"],"'CAMPSITES' is defined but never used.","no-global-assign","no-unsafe-negation"]